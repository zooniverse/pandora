{
  "name": "Pandora",
  "author": "Zooniverse",
  "dependencies": {
    "grommet": "^1.13.0",
    "history": "^4.10.1",
    "markdownz": "^7.7.1",
    "panoptes-client": "^3.3.0",
    "prop-types": "^15.7.2",
    "react": "^16.14.0",
    "react-dom": "^16.14.0",
    "react-redux": "^4.4.10",
    "react-router": "^3.2.6",
    "redux": "^3.7.2",
    "redux-devtools-extension": "^1.0.0",
    "redux-thunk": "^2.3.0",
    "zoo-grommet": "^0.3.0"
  },
  "devDependencies": {
    "@babel/cli": "^7.12.1",
    "@babel/core": "^7.12.3",
    "@babel/node": "^7.12.6",
    "@babel/preset-env": "^7.12.1",
    "@babel/preset-react": "^7.12.5",
    "autoprefixer": "^6.5.3",
    "babel-eslint": "^10.1.0",
    "babel-loader": "^8.1.0",
    "babel-plugin-react-transform": "^3.0.0",
    "clean-webpack-plugin": "^0.1.19",
    "css-loader": "^5.2.6",
    "enzyme": "^3.11.0",
    "enzyme-adapter-react-16": "^1.15.5",
    "eslint": "^4.19.1",
    "eslint-config-airbnb": "^13.0.0",
    "eslint-loader": "^1.9.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jsx-a11y": "^2.2.3",
    "eslint-plugin-react": "^6.8.0",
    "file-loader": "^6.2.0",
    "html-webpack-plugin": "^3.2.0",
    "image-webpack-loader": "^6.0.0",
    "jsdom": "^11.12.0",
    "mini-css-extract-plugin": "^1.6.0",
    "mocha": "^8.4.0",
    "nib": "^1.1.2",
    "node-sass": "^4.14.1",
    "react-svg-loader": "^3.0.3",
    "rimraf": "^2.7.1",
    "sass-loader": "^8.0.2",
    "stats-webpack-plugin": "^0.7.0",
    "style-loader": "^1.3.0",
    "stylus": "^0.54.8",
    "stylus-loader": "^4.3.3",
    "webpack": "^4.44.2",
    "webpack-cli": "^3.3.12",
    "webpack-dashboard": "^3.2.1",
    "webpack-dev-server": "^3.11.0"
  },
  "engines": {
    "node": ">=14",
    "npm": ">=6"
  },
  "license": "Apache-2.0",
  "repository": "https://github.com/zooniverse/pandora",
  "scripts": {
    "_start": "NODE_ENV=staging BABEL_ENV=development webpack-dashboard -p 3001 -- webpack-dev-server --config ./webpack.config.js",
    "start": "export HEAD_COMMIT=${HEAD_COMMIT:-$(git rev-parse --short HEAD)}; npm run _start;",
    "test": "NODE_ENV=development BABEL_ENV=test mocha test/setup.js test/enzyme-configuration.js $(find test -name *.test.jsx) --require @babel/register",
    "eslint": "eslint .",
    "_build": "BABEL_ENV=production webpack --config webpack.production.config.js",
    "build": "export HEAD_COMMIT=${HEAD_COMMIT:-$(git rev-parse --short HEAD)}; npm run _build;",
    "_build-staging": "export NODE_ENV=staging; npm run build",
    "_build-production": "export NODE_ENV=production; npm run build"
  }
}
